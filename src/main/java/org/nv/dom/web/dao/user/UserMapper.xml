<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.nv.dom.web.dao.user.UserMapper">

	<select id="getUserIdListByGameId" parameterType="long" resultType="long">
	
		SELECT 
			dp.user_id
		FROM
			d_player dp
		WHERE
			dp.game_id = #{gameId} AND dp.status != 9
	
	</select>
	
	<select id="getJudgerIdListByGameId" parameterType="long" resultType="long">
	
		SELECT 
			dp.user_id
		FROM
			d_player dp
		WHERE
			dp.game_id = #{gameId} AND dp.status != 9 AND dp.role= 'judger'
	
	
	</select>
	
	<insert id="saveOfflineSpeech">
	
		INSERT INTO d_offline_speech(
			user_id,
			speech_id,
			newspaper_id
		)
		VALUES
			 <foreach item="userId" index="index" collection="users" separator=",">
 			(
            #{userId},
            #{speechId},
            #{newspaperId}
            )
    		 </foreach>
	
	</insert>
	
	<update id="updateOfflineChat">
	
		UPDATE
			d_offline_message
		SET
			is_read = 0 
		WHERE
			chat_id = #{chatId} AND create_time = #{createTime}
	
	</update>
	
	<select id="getChatInfoByPlayerId" parameterType="long"  resultType="ChatInfo">
	
		SELECT
			dp.user_id AS toUserId,
			du.nickname AS toUserNickname,
			du.avatar AS toUserAvatar,
			du.motto AS toUserMotto
		FROM
			d_player dp, d_user du
		WHERE
			dp.id=#{playerId} AND du.id = dp.user_id
	
	</select>
	
	<select id="getChatInfoByUserId" parameterType="long"  resultType="ChatInfo">
	
		SELECT
			du.id AS toUserId,
			du.nickname AS toUserNickname,
			du.avatar AS toUserAvatar,
			du.motto AS toUserMotto
		FROM
			d_user du
		WHERE
			dp.id=#{toUserId}
	
	</select>
	
	<insert id="saveMessage" parameterType="ChatDetail">
	
		INSERT INTO d_offline_message(
			from_user_id,
			to_user_id,
			chat_id,
			content,
			create_time,
			is_read,
			pay_load
		)
		VALUES(
			#{fromUserId},
			#{toUserId},
			#{chatId},
			#{content},
			#{createTime},
			#{isRead},
			#{payLoad}
		)			
	
	</insert>
	
	<insert id="saveMessageBatch">
	
		INSERT INTO d_offline_message(
			from_user_id,
			to_user_id,
			chat_id,
			content,
			create_time,
			is_read,
			pay_load
		)
		VALUES
			 <foreach item="item" index="index" collection="list" separator=",">
 			(
            #{item.fromUserId},
			#{item.toUserId},
			#{item.chatId},
			#{item.content},
			#{item.createTime},
			#{item.isRead},
			#{item.payLoad}
            )
    		 </foreach>
	
	</insert>
	
</mapper>