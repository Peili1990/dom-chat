<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.nv.dom.web.dao.user.UserMapper">

	<select id="getUserIdListByGameId" parameterType="long" resultType="long">
	
		SELECT 
			dp.user_id
		FROM
			d_player dp
		WHERE
			dp.game_id = #{gameId} AND dp.status != 9
	
	</select>
	
	<insert id="saveOfflineSpeech">
	
		INSERT INTO d_offline_speech(
			user_id,
			speech_id,
			newspaper_id
		)
		VALUES
			 <foreach item="userId" index="index" collection="users" separator=",">
 			(
            #{userId},
            #{speechId},
            #{newspaperId}
            )
    		 </foreach>
	
	</insert>
	
	<select id="getChatInfoByPlayerId" parameterType="long"  resultType="ChatInfo">
	
		SELECT
			dp.user_id AS toUserId,
			du.nickname AS toUserNickname,
			du.avatar AS toUserAvatar,
			du.motto AS toUserMotto
		FROM
			d_player dp, d_user du
		WHERE
			dp.id=#{playerId} AND du.id = dp.user_id
	
	</select>
	
	<select id="getChatInfoByUserId" parameterType="long"  resultType="ChatInfo">
	
		SELECT
			du.id AS toUserId,
			du.nickname AS toUserNickname,
			du.avatar AS toUserAvatar,
			du.motto AS toUserMotto
		FROM
			d_user du
		WHERE
			dp.id=#{toUserId}
	
	</select>
	
	<insert id="saveOfflineMessage" parameterType="ChatDetail">
	
		INSERT INTO d_offline_message(
			user_id,
			chat_id,
			content,
			create_time
		)
		VALUES(
			#{toUserId},
			#{chatId},
			#{content},
			#{createTime}
		)
			
	
	</insert>

</mapper>